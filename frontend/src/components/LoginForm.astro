
---
interface Props {
	identifier: string;
	password: string;
}

const { identifier, password } = Astro.props;
---

<form class="mt-6" id="email-form">
  <div class="w-full flex">
	<h1>Login</h1>
    <input
      id="identifier"
      name="identifier"
	  value={identifier}
      placeholder="Email address / username"
      aria-label="Email address / username"
      class="min-w-0 flex-auto appearance-none rounded-md border border-zinc-900/10 bg-white px-3 py-[calc(theme(spacing.2)-1px)] shadow-md shadow-zinc-800/5 placeholder:text-zinc-400 focus:border-teal-500 focus:outline-none focus:ring-4 focus:ring-teal-500/10 sm:text-sm dark:border-zinc-700 dark:bg-zinc-700/[0.15] dark:text-zinc-200 dark:placeholder:text-zinc-500 dark:focus:border-teal-400 dark:focus:ring-teal-400/10"
    />
  <input
  id="password"
  name="password"
  type="password"
  placeholder="Password"
  aria-label="Password"
  class="min-w-0 flex-auto appearance-none rounded-md border border-zinc-900/10 bg-white px-3 py-[calc(theme(spacing.2)-1px)] shadow-md shadow-zinc-800/5 placeholder:text-zinc-400 focus:border-teal-500 focus:outline-none focus:ring-4 focus:ring-teal-500/10 sm:text-sm dark:border-zinc-700 dark:bg-zinc-700/[0.15] dark:text-zinc-200 dark:placeholder:text-zinc-500 dark:focus:border-teal-400 dark:focus:ring-teal-400/10"
  />

    <button
      class="inline-flex items-center gap-2 justify-center rounded-md py-2 px-3 text-sm outline-offset-2 transition active:transition-none bg-zinc-800 font-semibold text-zinc-100 hover:bg-zinc-700 active:bg-zinc-800 active:text-zinc-100/70 dark:bg-zinc-700 dark:hover:bg-zinc-600 dark:active:bg-zinc-700 dark:active:text-zinc-100/70 ml-4 flex-none"
      type="submit">
      Join
    </button>
  </div>
</form>


<style>
	form
	{
		background:bisque;
		margin:auto;
		width:60%;
	}
	label
	{
		font-weight:bold;
		margin:5px;
	}
	input
	{
		font-weight:bold;
		margin:12px;
		display: block;
	}
	button
	{
		margin: 12px;
		border-radius: 5px;
	}
</style>
<script>
	//import { getSession } from 'auth-astro/server';
	//const { signIn, signOut } = await import("auth-astro/client")
    import {  isInputError } from "astro:actions";
    import {actions} from "astro:actions"

    function clearPreviousMessage(id: string) {
    const messageElement = document.getElementById(id);
    if (messageElement) {
      messageElement.remove();
    }
  }

  //const session = await getSession(Astro.request);
  function addMessageElement(
    message: string,
    type: "error" | "success",
    element: HTMLElement
  ) {
    const p = document.createElement("p");

    p.id = "message";
    p.className = `message ${type === "success" ? "text-teal-300" : "text-pink-300"} mt-2 px-2`;
    p.innerText = message;
    form.appendChild(p);
    p.innerText = message;
    element.appendChild(p);
  }

  function renderMessage(error: any, data: any, form: HTMLFormElement) {
    if (error && isInputError(error)) {
      const message = error.fields.email && error.fields.email[0];
      addMessageElement(message || "", "error", form);
    } else {
      if (data?.strapiErrors) {
        const message = data?.strapiErrors.message;
        addMessageElement(message, "error", form);
      } else {
        const message = "Form submitted, thank you.";
        addMessageElement(message, "success", form);
      }
    }
  }

    const form = document.getElementById("email-form") as HTMLFormElement;
  
    async function handleFormSubmit(e: Event) {
      e.preventDefault();
  
      const formData = new FormData(form);
	  const { data, error } = await actions.login({data:{identifier:""+formData.get("identifier")?.toString(),password:""+formData.get("password")?.toString()}});
	  //localStorage.setItem("token",data?.data.jwt)
	  //if (data.isArray())
	  localStorage.setItem("jwt",data?.data.jwt)
	  localStorage.setItem("username",data?.data.user?.username)
	  localStorage.setItem("userId",data?.data.user?.id)
	  //localStorage.setItem
	  //signIn("jwt");
	  renderMessage(error, data, form);
    }
  
    form.addEventListener("submit", handleFormSubmit);
  </script>
